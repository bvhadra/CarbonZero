{"ast":null,"code":"var _jsxFileName = \"/Users/home/Documents/School of code/Final Project- CodeZilla/CarbonZero/src/components/Questionnaire/Questionnaire.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"../Button/button\";\nimport questionsList from \"../../lib/data\";\nimport PreviousButton from \"../PreviousButton/PreviousButton\";\nimport SeeResultsButton from \"../SeeResultsButton/SeeResultsButton\";\n// import Results from '../Results/Results'\nimport \"./Questionnaire.css\";\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Questionnaire(_ref) {\n  _s();\n  let {\n    response,\n    setResponse\n  } = _ref;\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const [completed, setCompleted] = useState(0);\n  useEffect(() => {\n    if (buttonClicked === true && questionIndex === questionsList.length - 1) {\n      setCompleted(100);\n    } else {\n      const completionPercentage = Math.floor(questionIndex / questionsList.length * 100);\n      setCompleted(completionPercentage);\n    }\n  }, [questionIndex, buttonClicked]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questionnaire-body\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      data: questionsList[questionIndex],\n      setQuestionIndex: setQuestionIndex,\n      questionIndex: questionIndex,\n      response: response,\n      setResponse: setResponse,\n      buttonClicked: buttonClicked,\n      setButtonClicked: setButtonClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"previous-button-and-results-button\",\n      children: [/*#__PURE__*/_jsxDEV(PreviousButton, {\n        setQuestionIndex: setQuestionIndex,\n        questionIndex: questionIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SeeResultsButton, {\n        setQuestionIndex: setQuestionIndex,\n        questionIndex: questionIndex,\n        response: response,\n        buttonClicked: buttonClicked,\n        setButtonClicked: setButtonClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      bgcolor: \"#29524a\",\n      completed: completed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Questionnaire, \"d0rPLqN/LZZZl2pKxHZ77niTXIc=\");\n_c = Questionnaire;\nvar _c;\n$RefreshReg$(_c, \"Questionnaire\");","map":{"version":3,"names":["React","useState","useEffect","Button","questionsList","PreviousButton","SeeResultsButton","ProgressBar","jsxDEV","_jsxDEV","Questionnaire","_ref","_s","response","setResponse","questionIndex","setQuestionIndex","buttonClicked","setButtonClicked","completed","setCompleted","length","completionPercentage","Math","floor","className","children","data","fileName","_jsxFileName","lineNumber","columnNumber","bgcolor","_c","$RefreshReg$"],"sources":["/Users/home/Documents/School of code/Final Project- CodeZilla/CarbonZero/src/components/Questionnaire/Questionnaire.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"../Button/button\";\nimport questionsList from \"../../lib/data\";\nimport PreviousButton from \"../PreviousButton/PreviousButton\";\nimport SeeResultsButton from \"../SeeResultsButton/SeeResultsButton\";\n// import Results from '../Results/Results'\nimport \"./Questionnaire.css\"\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\n\n\nexport default function Questionnaire({ response, setResponse}) {\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n  const [completed, setCompleted] = useState(0);\n\n  useEffect(() => {\n    if (buttonClicked === true && questionIndex === questionsList.length - 1) {\n      setCompleted(100);\n    }\n    else {\n      const completionPercentage = Math.floor(((questionIndex) / questionsList.length) * 100);\n      setCompleted(completionPercentage);\n    }\n  }, [questionIndex, buttonClicked]);\n  \n\n  return (\n    <div className=\"questionnaire-body\">\n      <Button\n        data={questionsList[questionIndex]}\n        setQuestionIndex={setQuestionIndex}\n        questionIndex={questionIndex}\n        response={response}\n        setResponse={setResponse}\n        buttonClicked={buttonClicked}\n        setButtonClicked={setButtonClicked}\n      />\n<div className=\"previous-button-and-results-button\">\n      <PreviousButton\n        setQuestionIndex={setQuestionIndex}\n        questionIndex={questionIndex}\n      />\n\n      <SeeResultsButton setQuestionIndex={setQuestionIndex}\n        questionIndex={questionIndex} response={response} buttonClicked={buttonClicked} setButtonClicked={setButtonClicked}/>\n\n</div>\n\n<ProgressBar bgcolor={\"#29524a\"} completed={completed} />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE;AACA,OAAO,qBAAqB;AAC5B,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrD,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAA2B;EAAAC,EAAA;EAAA,IAA1B;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAAH,IAAA;EAC5D,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,IAAIe,aAAa,KAAK,IAAI,IAAIF,aAAa,KAAKX,aAAa,CAACiB,MAAM,GAAG,CAAC,EAAE;MACxED,YAAY,CAAC,GAAG,CAAC;IACnB,CAAC,MACI;MACH,MAAME,oBAAoB,GAAGC,IAAI,CAACC,KAAK,CAAGT,aAAa,GAAIX,aAAa,CAACiB,MAAM,GAAI,GAAG,CAAC;MACvFD,YAAY,CAACE,oBAAoB,CAAC;IACpC;EACF,CAAC,EAAE,CAACP,aAAa,EAAEE,aAAa,CAAC,CAAC;EAGlC,oBACER,OAAA;IAAKgB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCjB,OAAA,CAACN,MAAM;MACLwB,IAAI,EAAEvB,aAAa,CAACW,aAAa,CAAE;MACnCC,gBAAgB,EAAEA,gBAAiB;MACnCD,aAAa,EAAEA,aAAc;MAC7BF,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY;MACzBG,aAAa,EAAEA,aAAc;MAC7BC,gBAAgB,EAAEA;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACRtB,OAAA;MAAKgB,SAAS,EAAC,oCAAoC;MAAAC,QAAA,gBAC7CjB,OAAA,CAACJ,cAAc;QACbW,gBAAgB,EAAEA,gBAAiB;QACnCD,aAAa,EAAEA;MAAc;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eAEFtB,OAAA,CAACH,gBAAgB;QAACU,gBAAgB,EAAEA,gBAAiB;QACnDD,aAAa,EAAEA,aAAc;QAACF,QAAQ,EAAEA,QAAS;QAACI,aAAa,EAAEA,aAAc;QAACC,gBAAgB,EAAEA;MAAiB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExH,CAAC,eAENtB,OAAA,CAACF,WAAW;MAACyB,OAAO,EAAE,SAAU;MAACb,SAAS,EAAEA;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACnB,EAAA,CA1CuBF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}